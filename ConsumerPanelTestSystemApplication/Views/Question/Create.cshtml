@model ConsumerPanelTestSystemApplication.ViewModels.QuestionViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>QuestionViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.QuestionText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QuestionText, new { htmlAttributes = new { @class = "form-control", placeholder = "What should this question say?" } })
                @Html.ValidationMessageFor(model => model.QuestionText, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                <label class="col-md-2 control-label">
                    Select Question Type(s)
                </label>
                <div class="col-md-10">
                    @foreach (var item in (SelectList)ViewBag.QuestionnaireTypeId)
                    {
                        <input type="checkbox" name="QuestionnaireTypeId" value="@item.Value" class="checkbox-inline" />
                        @Html.Label(item.Value, new { @class = "control-label" })
                    }
                </div>
            </div>*@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (Model.QuestionTypes != null)
                {
                    for (int i = 0; i < Model.QuestionTypes.Count; i++)
                    {
                        @Html.HiddenFor(m => Model.QuestionTypes[i].Value)
                        @Html.HiddenFor(m => Model.QuestionTypes[i].Text)
                        @Html.CheckBoxFor(m => Model.QuestionTypes[i].Selected) 
                        <text>&nbsp;</text>
                        @Html.Label(Model.QuestionTypes[i].Text) <br />
                    }
                }
                @Html.ValidationMessageFor(model => model.QuestionTypes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
