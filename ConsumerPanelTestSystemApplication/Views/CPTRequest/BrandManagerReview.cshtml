@model ConsumerPanelTestSystemApplication.ViewModels.CPTRequestViewModel

@{
    ViewBag.Title = "Review Request";
}

<h2>Review Request</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        
        <fieldset class="fieldset-border">
            <legend class="legend-border">Request Information</legend>
            @*<div class="form-group">
                @Html.LabelFor(model => model.RequestTitle, htmlAttributes: new { @class = "control-label col-sm-pull-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.RequestTitle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RequestTitle, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div>
                @Html.LabelFor(model => model.RequestTitle, htmlAttributes: new { @class = "control-label col-sm-pull-2" })
                @Html.DisplayFor(model => model.RequestTitle)
                @Html.HiddenFor(model => model.RequestTitle)
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.RequestDate, htmlAttributes: new { @class = "control-label col-sm-pull-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.RequestDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RequestDate, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div>
                @Html.LabelFor(model => model.RequestDate, htmlAttributes: new { @class = "control-label col-sm-pull-2" })
                @Html.DisplayFor(model => model.RequestDate)
                @Html.HiddenFor(model => model.RequestDate)
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.RequestStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.RequestStatus, htmlAttributes: new { @class = "form-control"})
                    @Html.ValidationMessageFor(model => model.RequestStatus, "", new { @class = "text-danger" })
                </div>
            </div>*@

            
            @*<div class="form-group">
                @Html.LabelFor(model => model.ProductDivision, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.ProductDivision, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ProductDivision, "", new { @class = "text-danger" })
                </div>
            </div>*@

            @*<div class="form-group">
                @Html.LabelFor(model => model.SubmittedByName, htmlAttributes: new { @class = "control-label col-sm-pull-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.SubmittedByName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SubmittedByName, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div>
                @Html.LabelFor(model => model.SubmittedByName, htmlAttributes: new { @class = "control-label col-sm-pull-2" })
                @Html.DisplayFor(model => model.SubmittedByName)
                @Html.HiddenFor(model => model.SubmittedByName)
            </div>

            <div>
                @Html.LabelFor(model => model.RequestStatus, htmlAttributes: new { @class = "control-label col-sm-pull-2" })
                @Html.DisplayFor(model => model.RequestStatus)
                @Html.HiddenFor(model => model.RequestStatus)
            </div>

        </fieldset>

        &nbsp;

        <fieldset class="fieldset-border">
            <legend class="legend-border">Request Details</legend>
            
            @*<div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>*@
            
            <div>
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-sm-pull-2" })
                @Html.DisplayFor(model => model.City)
                @Html.HiddenFor(model => model.City)
            </div>

            <div>
                @Html.LabelFor(model => model.ProductDivision, htmlAttributes: new { @class = "control-label col-sm-pull-2" })
                @Html.DisplayFor(model => model.ProductDivision)
                @Html.HiddenFor(model => model.ProductDivision)
            </div>

            <div>
                @Html.LabelFor(model => model.Justification, htmlAttributes: new { @class = "control-label col-sm-pull-2" })
                @Html.DisplayFor(model => model.Justification)
                @Html.HiddenFor(model => model.Justification)
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.Justification, htmlAttributes: new { @class = "control-label col-sm-pull-2" })
                <div class="col-sm-10">
                    @Html.DisplayFor(model => model.Justification, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Justification, "", new { @class = "text-danger" })
                </div>
            </div>*@



        </fieldset>
        &nbsp;
        <fieldset class="fieldset-border">
            <legend class="legend-border">Approval Information</legend>

            <div class="form-group">
                @Html.LabelFor(model => model.BReview, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BReview, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BReview, "", new { @class = "text-danger" })
                </div>
            </div>


        </fieldset>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Submit" class="btn btn-success" />
                </div>
            </div>
</div>
}

<div>
    @Html.ActionLink("Back to Pending Requests", "BrandManagerReviewIndex", null, new { @class = "btn btn-sm btn-default" })
</div>
