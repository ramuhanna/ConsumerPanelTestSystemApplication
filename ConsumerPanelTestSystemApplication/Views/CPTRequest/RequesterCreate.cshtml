@model ConsumerPanelTestSystemApplication.ViewModels.CPTRequestViewModel

@{
    ViewBag.Title = "Submit Request";
}

<h2>Submit Request</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Enter Request Information</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.RequestTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RequestTitle, new { htmlAttributes = new { @class = "form-control", placeholder = "Babycare Analysis" } })
                @Html.ValidationMessageFor(model => model.RequestTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductDivision, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.ProductDivision, "Select Product Division", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductDivision, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Justification, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Justification, new { htmlAttributes = new { @class = "form-control", placeholder = "We need some research." } })
                @Html.ValidationMessageFor(model => model.Justification, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LocationId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LocationId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-sm btn-primary"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Submitted Requests", "SubmittedRequestsIndex", null, new { @class= "btn btn-sm btn-default" })
</div>
